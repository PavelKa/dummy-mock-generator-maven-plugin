name: Manual Release

on:
  workflow_dispatch:
permissions:
  contents: write
run-name: Manual release  @${{ github.actor }}  ${{ github.event.head_commit.message }}
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
          server-id: central # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: OSSRH_USERNAME # env variable for username in deploy
          server-password: OSSRH_TOKEN # env variable for token in deploy
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

      - name: Set up Git
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Prepare and perform release
        run: |
          mvn -B clean release:prepare -Pintegration-test
          echo "MY_RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> "$GITHUB_ENV"

          mvn -B release:perform -P release-prepare-perform
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_TOKEN: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Display integration test log
        if: failure()
        run: cat target/it/simple-it/build.log

      - name: Push changes
        run: |
          git push origin main

      - name: Create GitHub release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: ${{ env.MY_RELEASE_VERSION }}
          release_name: Release ${{ env.MY_RELEASE_VERSION }}
          body: |
            Release version ${{ env.MY_RELEASE_VERSION }}
          draft: false
          prerelease: false

